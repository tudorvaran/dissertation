"""
Django settings for dissertation project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import dj_database_url
import environ

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
env = environ.Env(DEBUG=(bool, True))



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '4eh=^$#z4+!u9hcsf%gx-(pnc(&t#21$3p2$6w@fg7(buy_)ld'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
THIRD_PARTY_APPS = [
]

LOCAL_APPS = [
    'photos_ml'
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dissertation.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dissertation.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = dict(
    default=dj_database_url.config(default="postgres:///dissertation")
)

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PARSER_CLASS": "redis.connection.HiredisParser",
        }
    }
}

RQ_QUEUES = {
    'default': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0,
        'DEFAULT_TIMEOUT': 360,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

OBJECT_RECOGNITION_MODEL = env.str('OBJECT_RECOGNITION_MODEL', default='resnet50_coco_best_v2.0.1.h5')
#OBJECT_RECOGNITION_MODEL = env.str('OBJECT_RECOGNITION_MODEL', default='yolo-tiny.h5')
WORD2VEC_MODEL = env.str('WORD2VEC_MODEL', default='GoogleNews-vectors-negative300.bin')
SHOW_DEBUG_IMAGES = env.bool('SHOW_DEBUG_IMAGES', default=False)

PHOTOS_INPUT_PATH = env.str('PHOTOS_INPUT_PATH', default=os.path.join(BASE_DIR, 'photos_ml', 'photos_input'))
PHOTOS_OUTPUT_PATH = env.str('PHOTOS_OUTPUT_PATH', default=os.path.join(BASE_DIR, 'photos_ml', 'photos_output'))

IMAGE_PATH = env.str('IMAGE_PATH', default=PHOTOS_INPUT_PATH if not SHOW_DEBUG_IMAGES else PHOTOS_OUTPUT_PATH)

IMAGE_LIMIT = env.int('IMAGE_LIMIT', default=None)  # Because the building dataset is a time-consuming operation, set an upper limit for experimenting

VALIDATION_FILE = env.str('VALIDATION_FILE', default='panoptic_val2017.json')
EVALUATION_RESULTS_FILE = env.str('EVALUATION_RESULTS_FILE', default='results.json')

HOMEPAGE_PICTURES = env.int('HOMEPAGE_PICTURES_COUNT', default=30)
RECOMMENDER_ITEMS_LIMIT = env.int('RECOMMENDER_ITEMS_LIMIT', default=150)
